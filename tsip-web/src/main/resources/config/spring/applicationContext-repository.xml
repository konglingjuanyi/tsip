<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:property-placeholder ignore-resource-not-found="true"
            location="classpath:/config/spring/app.properties "/>
            
    <!-- 数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="validationQuery" value="${jdbc.validationQuery}" />
        <property name="initialSize" value="${jdbc.pool.initialSize}" />
        <property name="minIdle" value="${jdbc.pool.minIdle}" />
        <property name="maxActive" value="${jdbc.pool.maxActive}" />
        <property name="maxIdle" value="${jdbc.pool.maxIdle}" />
        <property name="testOnBorrow" value="${jdbc.pool.testOnBorrow}" />
        <property name="testWhileIdle" value="${jdbc.pool.testWhileIdle}" />
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}" />
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}" />
    </bean>

   <!--  mybatis configuration -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.saicmotor.telematics.roadbook" />
        <property name="mapperLocations" value="classpath*:/com/saicmotor/telematics/roadbook/**/entity/*Mapper.xml" />
    </bean>

     <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache" >
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    <bean class="com.saicmotor.telematics.framework.core.dal.repo.mybatis.BaseMyBatisDaoImpl" />
    <!-- mybatis configuration end -->


    <!--JPA configuration begin-->
    <!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口, 动态生成实现类 -->
    <jpa:repositories base-package="com.saicmotor.telematics.tsgp.sp.roadbook"
                      transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
    
   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" >
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="false"/>
                <property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect"/>
            </bean>
        </property>
        <property name="packagesToScan" value="com.saicmotor.telematics.roadbook" />
    </bean>
    <!--JPA configuration end-->

    <!-- for mybatis is used for read only, ignore mybatis transaction from transaction management. -->
<!--     <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean> -->

    <tx:annotation-driven transaction-manager="transactionManager" />

    <aop:config>
        <aop:pointcut id="serviceMethods"
                      expression="execution(* com.saicmotor.telematics.tsgp.sp.roadbook.service..*Service*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" />
            <tx:method name="find*"  read-only="true" />
            <tx:method name="query*" read-only="true"/>
            <tx:method name="is*" read-only="true"/>
            <tx:method name="login*" read-only="true"/>
            <tx:method name="checkAuthority*" read-only="true"/>
            <tx:method name="postConstruct*" read-only="true"/>
            <tx:method name="preDestroy*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

<!--
       <import resource="applicationContext-quartz.xml"  />
-->

</beans>